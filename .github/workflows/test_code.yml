name: Test pre-commit, code and docs

on:
  pull_request:
  push:

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: pre-commit/action@v3.0.0
  test_code:
    needs: [pre-commit]
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 12
      matrix:
        python-version: [3.7, "3.10"]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install dependencies
        run: |
          pip install -e .
          pip install flake8 pytest pytest_regressions
          make install gdslib
      - name: Lint with flake8
        run: |
          flake8 .
      - name: Test with pytest
        run: pytest
  test_code_coverage:
    runs-on: ubuntu-latest
    needs: [pre-commit]

    steps:
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.11.0
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          make install
      - name: Test with pytest
        run: |
          python -m pip install --upgrade pip
          pip install pytest klayout lytest scikit-image pytest-cov
          pytest --cov=gdsfactory --cov-report=xml --cov-config=.coveragerc gdsfactory
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
  test_code_plugins:
    runs-on: ubuntu-latest
    needs: [pre-commit]
    steps:
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.11.0
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.9
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: anaconda-client-env
      - name: Add conda to system path
        run: |
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          make gdslib plugins
          make install
          pip install -r requirements_full.txt
      - name: Test with pytest
        env:
          TIDY3D_USER: ${{ secrets.TIDY3D_EMAIL }}
          TIDY3D_PASS: ${{ secrets.TIDY3D_PASSWORD }}
        run: |
          mkdir -p $HOME/.tidy3d
          echo ${{ secrets.TIDY3D_AUTH }} > $HOME/.tidy3d/auth.json
          make test-plugins
  test_docs:
    needs: [pre-commit]
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 12
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.9
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: anaconda-client-env
      - name: Add conda to system path
        run: |
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          sudo apt install pandoc
          make gdslib plugins-debian full
      - name: Test documentation
        env:
          TIDY3D_USER: ${{ secrets.TIDY3D_EMAIL }}
          TIDY3D_PASS: ${{ secrets.TIDY3D_PASSWORD }}
        run: |
          mkdir -p $HOME/.tidy3d
          echo ${{ secrets.TIDY3D_AUTH }} > $HOME/.tidy3d/auth.json
          cd docs
          make html

  release_pypi:
    needs: [pre-commit]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*

  release_installers:
    needs: [pre-commit]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 12
      matrix:
        python-version: ["3.8"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.11.0
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: "3.8"
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: anaconda-client-env
      - name: Add conda to system path
        run: |
          echo $CONDA/bin >> $GITHUB_PATH
      - name: constructor build
        run: |
          mamba install constructor
          constructor .
          pwd
          ls
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: false
          files: |
            gdsfactory-6.2.3-Linux-x86_64.sh
            gdsfactory-6.2.3-Windows-x86_64.exe
            gdsfactory-6.2.3-MacOSX-x86_64.pkg
  release_docker:
    needs: [pre-commit]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.11.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: joamatab/gdsfactory:latest,joamatab/gdsfactory:6.2.3
          file: Dockerfile.dev
  sphinx_docs_to_gh-pages:
    needs: [pre-commit]
    runs-on: ubuntu-latest
    name: Sphinx docs to gh-pages
    steps:
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.11.0
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.9
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: anaconda-client-env
      - name: Add conda to system path
        run: |
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Installing the library
        shell: bash -l {0}
        run: |
          mkdir -p $HOME/.tidy3d
          echo ${{ secrets.TIDY3D_AUTH }}  > $HOME/.tidy3d/auth.json
          # sudo wget https://github.com/jgm/pandoc/releases/download/1.16.0.2/pandoc-1.16.0.2-1-amd64.deb
          # sudo dpkg -i pandoc-1.16.0.2-1-amd64.deb
          sudo apt install pandoc
          make gdslib plugins-debian full
      - name: Running the Sphinx to gh-pages Action
        uses: uibcdf/action-sphinx-docs-to-gh-pages@v1.0-beta.2
        env:
          TIDY3D_USER: ${{ secrets.TIDY3D_EMAIL }}
          TIDY3D_PASS: ${{ secrets.TIDY3D_PASSWORD }}
        with:
          branch: master
          dir_docs: docs
          sphinxopts: ""
