cells: {}
ports:
  o1:
    layer:
    - 1
    - 0
    midpoint:
    - 0.0
    - 0.0
    name: o1
    orientation: 180
    port_type: optical
    width: 1
  o2:
    layer:
    - 1
    - 0
    midpoint:
    - 50.0
    - 0.0
    name: o2
    orientation: 0
    port_type: optical
    width: 1
settings:
  changed: {}
  default:
    dc: 0.5
    direction: EAST
    fin_size:
    - 0.2
    - 0.05
    fins: false
    length: 10
    period: 0.85
    port:
    - 0
    - 0
    taper_length: 20
    w1: 0.4
    w2: 1
    waveguide_template_dbr: null
  full:
    dc: 0.5
    direction: EAST
    fin_size:
    - 0.2
    - 0.05
    fins: false
    length: 10
    period: 0.85
    port:
    - 0
    - 0
    taper_length: 20
    w1: 0.4
    w2: 1
    waveguide_template_dbr: null
  info:
    doc: "Distributed Bragg Reflector Cell class.\n    Tapers the input straight to\
      \ a periodic straight structure with varying width\n    (1-D photonic crystal).\n\
      \n    Args:\n       length: Length of the DBR region.\n       period: Period\
      \ of the repeated unit.\n       dc: Duty cycle of the repeated unit (must be\
      \ a float between 0 and 1.0).\n       w1: Width of the thin section of the straight.\
      \  w1 = 0 corresponds to disconnected periodic blocks.\n       w2: Width of\
      \ the wide section of the straight\n       taper_length: Length of the taper\
      \ between the input/output straight and the DBR region.\n       fins (boolean):\
      \ If `True`, adds fins to the input/output straights.\n        In this case\
      \ a different template for the component must be specified.\n       fin_size\
      \ ((x,y) Tuple): Specifies the x- and y-size of the `fins`. Defaults to 200\
      \ nm x 50 nm\n       waveguide_template_dbr: If `fins` above is True, a WaveguideTemplate\
      \ (dbr_wgt) must be specified.\n        This defines the layertype / datatype\
      \ of the DBR (which will be separate from the input/output straights)\n    \
      \   port (tuple): Cartesian coordinate of the input port.  Defaults to (0,0).\n\
      \       direction (string): Direction that the component will point *towards*,\n\
      \       can be of type `'NORTH'`, `'WEST'`, `'SOUTH'`, `'EAST'`, OR an angle\
      \ (float, in radians)\n       waveguide_template:  WaveguideTemplate object\n\
      \       waveguide_template_dbr: Picwriter WaveguideTemplate object\n       wg_width:\
      \ 0.5\n       wg_layer: gf.LAYER.WG[0]\n       wg_datatype: gf.LAYER.WG[1]\n\
      \       clad_layer: gf.LAYER.WGCLAD[0]\n       clad_datatype: gf.LAYER.WGCLAD[1]\n\
      \       bend_radius: 10\n       cladding_offset: 3\n\n    .. code::\n\n    \
      \             period\n        <-----><-------->\n                _________\n\
      \        _______|\n\n          w1       w2       ...  n times\n        _______\n\
      \               |_________\n\n\n\n    .. plot::\n      :include-source:\n\n\
      \      import gdsfactory as gf\n\n      c = gf.components.dbr2(length=10, period=0.85,\
      \ dc=0.5, w2=1, w1=0.4)\n      c.plot()\n\n    "
    function_name: dbr2
    info_version: 1
    module: gdsfactory.components.dbr2
    name: dbr2
    name_long: dbr2
version: 1
